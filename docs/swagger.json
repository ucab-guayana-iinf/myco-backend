{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "MyCo API Docs",
    "description": "Documentación oficial de la API REST de MyCo"
  },
  "host": "localhost:8001",
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "Endpoints relacionados con los residentes"
    },
    {
      "name": "PropertyType",
      "description": "Endpoints relacionados con los tipos de propiedades de las residencias"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all users in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user with given ID",
        "responses": {
          "200": {
            "description": "User is found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/residency/property-types": {
      "parameters": [
        {
          "name": "residency_id",
          "in": "body",
          "required": true,
          "description": "id de la residencia de la cual queremos obtener todos los tipos de propiedades",
          "type": "string",
          "example": {
            "residency_id": "e1ac73f8-c39e-46bc-b047-6bbd523acc4b"
          }
        }
      ],
      "get": {
        "tags": [
          "PropertyType"
        ],
        "summary": "Obtener todos los tipos de propiedades dado un residency_id",
        "responses": {
          "200": {
            "example": [
              {
                "id": "e1ac73f8-c39e-46bc-b047-6bbd523acc4b",
                "residency_id": "e1ac73f8-c39e6bbd523acc4b-b047-46bc",
                "name": "Penthouse"
              },
              {
                "id": "6bbd523acc4a-b047-46bc-c39e-",
                "residency_id": "e1ac73f8-c39e6bbe1ac73f8-b047-lkj9",
                "name": "House with terrace"
              }
            ]
          }
        }
      },
      "post": {
        "tags": [
          "PropertyType"
        ],
        "summary": "Crear un nuevo tipo de propiedad dentro de una residencia",
        "responses": {
          "200": {
            "example": "Property type saved succesfully"
          }
        }
      },
      "put": {
        "tags": [
          "PropertyType"
        ],
        "summary": "Actualizar el nombre de un tipo de propiedad de una residencia (el único campo actualizable es el nombre)",
        "responses": {
          "200": {
            "example": "Property type updated succesfully"
          }
        }
      },
      "delete": {
        "tags": [
          "PropertyType"
        ],
        "summary": "Eliminar un tipo de propiedad de una residencia",
        "responses": {
          "200": {
            "example": "Property type removed succesfully"
          }
        }
      }
    },
    "/residency/bills": {
      "get":{
        "parameters": [
          {
            "name": "property_id",
            "in": "body",
            "required": true,
            "description": "id de la propiedad de la cual queremos obtener todas las facturas",
            "type": "string",
            "example": {
              "property_id": "e1ac73f8-c39e-46bc-b047-6bbd523acc4b"
            }
          }
        ],
        "tags": [
          "Bills"
        ],
        "summary": "Obtener todas las facturas de una propiedad a partir de su property_id",
        "responses": {
          "200":{
            "example":[
              {
                "id": "e1ac73f8-c39e-46bc-b047-6bbd523acc4b",
                "property_id": "e1ac73f8-c39e6bbd523acc4b-b047-46bc",
                "monthly_paymment": 260,
                "debt": 940,
                "special_fee": 140,
                "other": 240,
                "creation_date": "Thu May 16 2019 13:43:13 GMT-0400 (GMT-04:00)",
                "last_update": "Thu May 16 2019 13:43:42 GMT-0400 (GMT-04:00)"
              }
            ]
          }
        }
      },
      "post": {
        "parameters": [
        {
          "name": "property_id",
          "in": "body",
          "required": true,
          "description": "id de la propiedad a la que se carga la factura",
          "type": "string",
          "example": {
            "property_id": "e1ac73f8-c39e-46bc-b047-6bbd523acc4b"
          }
        },
        {
          "name": "monthly_payment",
          "in": "body",
          "required": true,
          "description": "Cantidad que el dueño de la propiedad pagara mensualmente",
          "type": "float",
          "example": {
            "monthly_paymment": 200
          }
        },
        {
          "name": "debt",
          "in": "body",
          "required": true,
          "description": "Deuda total del condominio",
          "type": "float",
          "example": {
            "debt": 2000
          }
        },
        {
          "name": "special_fee",
          "in": "body",
          "required": true,
          "description": "Cantidad para la cuota especial",
          "type": "float",
          "example": {
            "special_fee": 150
          }
        },
        {
          "name": "other",
          "in": "body",
          "required": true,
          "description": "Cantidad de algun otro gasto realizado",
          "type": "float",
          "example": {
            "other": 180
          }
        }
      ],
        "tags": [
          "Bills"
        ],
        "summary": "Crear una nueva factura",
        "responses": {
          "200": {
            "example": "Bill saved succesfully"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "description": "id de la factura que se modificara",
            "type": "string",
            "example": {
              "property_id": "e1ac73f8-c39e-46bc-b047-6bbd523acc4b"
            }
          },
          {
            "name": "property_id",
            "in": "body",
            "required": true,
            "description": "id de la propiedad a la que se carga la factura",
            "type": "string",
            "example": {
              "property_id": "e1ac73f8-c39e-46bc-b047-6bbd523acc4b"
            }
          },
          {
            "name": "monthly_payment",
            "in": "body",
            "required": true,
            "description": "Cantidad que el dueño de la propiedad pagara mensualmente",
            "type": "float",
            "example": {
              "monthly_paymment": 200
            }
          },
          {
            "name": "debt",
            "in": "body",
            "required": true,
            "description": "Deuda total del condominio",
            "type": "float",
            "example": {
              "debt": 2000
            }
          },
          {
            "name": "special_fee",
            "in": "body",
            "required": true,
            "description": "Cantidad para la cuota especial",
            "type": "float",
            "example": {
              "special_fee": 150
            }
          },
          {
            "name": "other",
            "in": "body",
            "required": true,
            "description": "Cantidad de algun otro gasto realizado",
            "type": "float",
            "example": {
              "other": 180
            }
          }
        ],
        "tags": [
          "Bills"
        ],
        "summary": "Actualizar los datos de una factura (los únicos campos no actualizables son el id y la fecha de creacion)",
        "responses": {
          "200": {
            "example": "Property type updated succesfully"
          }
        }
      }
    },
    "/residency/create":{
      "post":{
        "parameters":[
          {
            "name": "admin_id",
            "in": "body",
            "required": true,
            "description":"id del administrador a cargo de esta residencia",
            "type": "string",
            "example":{
              "admin_id": "e1ac73f8-c39e-46bc-b047-6bbd523acc4b"
            }
          },
          {
            "name": "name",
            "in": "body",
            "required": true,
            "description": "Nombre de la residencia",
            "type": "string",
            "example": {
              "name": "Residencias Arivana"
            }
          },
          {
            "name": "yardage",
            "in": "body",
            "required": true,
            "description": "Espacio en yardas que ocupa la residencia",
            "type":"float",
            "example":{
                "yardage": 3000
            }
          }
        ],
        "tags":[
          "Residency"
        ],
        "summary": "Crear una nueva residencia",
        "responses":{
          "200":{
            "example":"Residency created succesfully"
          }
        }
      }
    },
    "/residency/:id":{
      "get":{
        "tags":[
          "Residency"
        ],
        "summary":"Obtener una residencia a partir de su id",
        "responses":{
          "200":{
            "example":[
              {
                "id": "e1ac73f8-c39e-46bc-b047-6bbd523acc4b",
                "admin_id": "6bbd523acc4a-b047-46bc-c39e-",
                "name": "Residencias Arivana",
                "yardage": 2000
              }
            ]
          }
        }
      }
    },
    "/residency/update":{
      "put":{
        "parameters":[
          {
            "name": "id",
            "in": "body",
            "required": true,
            "description":"id de la residencia que sera actualizada",
            "type": "string",
            "example":{
              "id": "e1ac73f8-c39e-46bc-b047-6bbd523assd4b"
            }
          },
          {
            "name": "admin_id",
            "in": "body",
            "required": true,
            "description":"id del administrador a cargo de esta residencia",
            "type": "string",
            "example":{
              "admin_id": "e1ac73f8-c39e-46bc-b047-6bbd523acc4b"
            }
          },
          {
            "name": "name",
            "in": "body",
            "required": true,
            "description": "Nombre de la residencia",
            "type": "string",
            "example": {
              "name": "Residencias Arivana"
            }
          },
          {
            "name": "yardage",
            "in": "body",
            "required": true,
            "description": "Espacio en yardas que ocupa la residencia",
            "type":"float",
            "example":{
                "yardage": 3000
            }
          }
        ],
        "tags":[
          "Residency"
        ],
        "summary": "Actualizar los datos de una residencia a partir de su id",
        "responses":{
          "200":{
            "example":"Residency updated succesfully"
          }
        }
      }
    }
  },
  "definitions": {
    "Residency": {
      "required": [
        "id",
        "name",
        "yardage"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "yardage": {
          "type": "float"
        }
      }
    },
    "Service": {
      "required": [
        "id",
        "residency_id",
        "price",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "residency_id": {
          "type": "string"
        },
        "price": {
          "type": "float"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Property Type": {
      "required": [
        "id",
        "residency_id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "residency_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "example": {
        "id": "e1ac73f8-c39e-46bc-b047-6bbd523acc4b",
        "residency_id": "6bbd523acc4b-c39e-46bc-b047-e1ac73f8",
        "name": "Penthouse"
       }
    },
    "Property Service": {
      "required": [
        "id",
        "service_id",
        "property_id"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "service_id": {
          "type": "string"
        },
        "property_id": {
          "type": "string"
        }
      }
    },
    "Property": {
      "required": [
        "id",
        "residency_id",
        "property_type_id",
        "user_id",
        "yardage",
        "department_number"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "residency_id": {
          "type": "string"
        },
        "property_type_id": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        },
        "yardage": {
          "type": "float"
        },
        "department_number": {
          "type": "string"
        }
      }
    },
    "User": {
      "required": [
        "id",
        "name",
        "lastname",
        "email",
        "social_number",
        "password"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "social_number": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Bill": {
      "required": [
        "id",
        "property_id",
        "amount",
        "description",
        "creation_date"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "property_id": {
          "type": "string"
        },
        "amount": {
          "type": "float"
        },
        "description": {
          "type": "string"
        },
        "creation_date": {
          "type": "timestamp"
        }
      }
    },
    "Debt": {
      "required": [
        "id",
        "property_id",
        "amount",
        "description",
        "creation_date"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "property_id": {
          "type": "string"
        },
        "amount": {
          "type": "float"
        },
        "description": {
          "type": "string"
        },
        "creation_date": {
          "type": "timestamp"
        }
      }
    },
    "Expense": {
      "required": [
        "id",
        "responsible_user_id",
        "amount",
        "concept",
        "creation_date"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "responsible_user_id": {
          "type": "string"
        },
        "amount": {
          "type": "float"
        },
        "concept": {
          "type": "string"
        },
        "creation_date": {
          "type": "timestamp"
        }
      }
    }
  }
}
